cmake_minimum_required(VERSION 3.24)

project(CUPDLP VERSION 0.0.1)

option(BUILD_CUDA "<BUILD_CUDA_OR_NOT>" OFF)
option(SINGLE_PRECISION "<IF_SINGLE_PRECISION>" OFF)


enable_language(C CXX)
set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED True)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
string(REPLACE "-O3" "-O2" CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE}")
string(REPLACE "-O3" "-O2" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
string(REPLACE "-O3" "-O2" CMAKE_CUDA_FLAGS_RELEASE "${CMAKE_CUDA_FLAGS_RELEASE}")
set(CMAKE_C_FLAGS_RELEASECMAKE_C_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
set(CMAKE_CUDA_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
message("reset release flags")
message(" - ${CMAKE_C_FLAGS_RELEASE}")
message(" - ${CMAKE_CXX_FLAGS_RELEASE}")
message(" - ${CMAKE_CUDA_FLAGS_RELEASE}")

if (${SINGLE_PRECISION} STREQUAL "ON")
    message(NOTICE "-- Sets build single precision")
    add_definitions(-DSFLOAT)
else()
    message(NOTICE "-- Sets build double precision")
endif ()

list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR})
message(NOTICE "-- Sets build with CUDA ${BUILD_CUDA}")
if (${BUILD_CUDA} STREQUAL "ON")
    include(FindCUDAConf.cmake)
else ()
    set(CUDA_LIBRARY-NOTFOUND true)
endif ()
# add subdirectories
add_subdirectory(cupdlp)
add_subdirectory(interface)
add_subdirectory(third-party)